// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using cookBook;

#nullable disable

namespace singleCooks.Migrations
{
    [DbContext(typeof(RecipeContext))]
    partial class RecipeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RecipeRegisteredUser", b =>
                {
                    b.Property<int>("FavoritedByRegisteredUserId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("userRecipesRecipeId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("FavoritedByRegisteredUserId", "userRecipesRecipeId");

                    b.HasIndex("userRecipesRecipeId");

                    b.ToTable("RecipeRegisteredUser");
                });

            modelBuilder.Entity("RecipeTag", b =>
                {
                    b.Property<int>("RecipeTagsTagId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("RecipesRecipeId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("RecipeTagsTagId", "RecipesRecipeId");

                    b.HasIndex("RecipesRecipeId");

                    b.ToTable("RecipeTag");
                });

            modelBuilder.Entity("cookBook.Ingredient", b =>
                {
                    b.Property<int>("IngredientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IngredientId"));

                    b.Property<string>("IngredientName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("RecipeId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("IngredientId");

                    b.HasIndex("RecipeId");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("cookBook.Instruction", b =>
                {
                    b.Property<int>("InstructionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InstructionId"));

                    b.Property<string>("Instructions")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("RecipeId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("InstructionId");

                    b.HasIndex("RecipeId");

                    b.ToTable("Instructions");
                });

            modelBuilder.Entity("cookBook.Nutrient", b =>
                {
                    b.Property<int>("NutrientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NutrientId"));

                    b.Property<double>("Amount")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<int?>("IngredientId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("NutrientId");

                    b.HasIndex("IngredientId");

                    b.ToTable("Nutrient");
                });

            modelBuilder.Entity("cookBook.Rating", b =>
                {
                    b.Property<int>("RatingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RatingId"));

                    b.Property<double>("RatingValue")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<int?>("RecipeId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("RatingId");

                    b.HasIndex("RecipeId");

                    b.ToTable("Rating");
                });

            modelBuilder.Entity("cookBook.Recipe", b =>
                {
                    b.Property<int>("RecipeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecipeId"));

                    b.Property<int>("CookingTime")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<double>("OverallRating")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<int>("PreparationTime")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("RecipeName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("Servings")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("RecipeId");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("cookBook.RecipeIngredient", b =>
                {
                    b.Property<int>("RecipeIngredientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecipeIngredientId"));

                    b.Property<int>("IngredientId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("Quantity")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("RecipeId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("RecipeIngredientId");

                    b.HasIndex("IngredientId");

                    b.HasIndex("RecipeId");

                    b.ToTable("RecipeIngredients");
                });

            modelBuilder.Entity("cookBook.RegisteredUser", b =>
                {
                    b.Property<int>("RegisteredUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RegisteredUserId"));

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("RAW(2000)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("RAW(2000)");

                    b.Property<string>("Username")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("RegisteredUserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("cookBook.Tag", b =>
                {
                    b.Property<int>("TagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TagId"));

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("TagId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("cookBook.UserFavouriteRecipe", b =>
                {
                    b.Property<int>("UserFavoritesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserFavoritesId"));

                    b.Property<int>("RecipeLikedId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("RegisteredUserId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("UserId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("UserFavoritesId");

                    b.HasIndex("RegisteredUserId");

                    b.ToTable("UserFavouriteRecipes");
                });

            modelBuilder.Entity("RecipeRegisteredUser", b =>
                {
                    b.HasOne("cookBook.RegisteredUser", null)
                        .WithMany()
                        .HasForeignKey("FavoritedByRegisteredUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("cookBook.Recipe", null)
                        .WithMany()
                        .HasForeignKey("userRecipesRecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RecipeTag", b =>
                {
                    b.HasOne("cookBook.Tag", null)
                        .WithMany()
                        .HasForeignKey("RecipeTagsTagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("cookBook.Recipe", null)
                        .WithMany()
                        .HasForeignKey("RecipesRecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("cookBook.Ingredient", b =>
                {
                    b.HasOne("cookBook.Recipe", null)
                        .WithMany("Ingredients")
                        .HasForeignKey("RecipeId");
                });

            modelBuilder.Entity("cookBook.Instruction", b =>
                {
                    b.HasOne("cookBook.Recipe", null)
                        .WithMany("Instructions")
                        .HasForeignKey("RecipeId");
                });

            modelBuilder.Entity("cookBook.Nutrient", b =>
                {
                    b.HasOne("cookBook.Ingredient", null)
                        .WithMany("Nutrients")
                        .HasForeignKey("IngredientId");
                });

            modelBuilder.Entity("cookBook.Rating", b =>
                {
                    b.HasOne("cookBook.Recipe", null)
                        .WithMany("Ratings")
                        .HasForeignKey("RecipeId");
                });

            modelBuilder.Entity("cookBook.RecipeIngredient", b =>
                {
                    b.HasOne("cookBook.Ingredient", "Ingredient")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("cookBook.Recipe", "Recipe")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("cookBook.UserFavouriteRecipe", b =>
                {
                    b.HasOne("cookBook.RegisteredUser", null)
                        .WithMany("favrecipes")
                        .HasForeignKey("RegisteredUserId");
                });

            modelBuilder.Entity("cookBook.Ingredient", b =>
                {
                    b.Navigation("Nutrients");

                    b.Navigation("RecipeIngredients");
                });

            modelBuilder.Entity("cookBook.Recipe", b =>
                {
                    b.Navigation("Ingredients");

                    b.Navigation("Instructions");

                    b.Navigation("Ratings");

                    b.Navigation("RecipeIngredients");
                });

            modelBuilder.Entity("cookBook.RegisteredUser", b =>
                {
                    b.Navigation("favrecipes");
                });
#pragma warning restore 612, 618
        }
    }
}
